{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","shared/utility.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Modal/Modal.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/withErrorHander/withErrorHandler.js","hooks/http-error-handler.js","components/UI/Input/Input.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","containers/Layout/Layout.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Spinner/Spinner.module.css","containers/Auth/Auth.module.css","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","store/sagas/auth.js","store/sagas/burgerBuilder.js","store/sagas/orders.js","store/sagas/index.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","SAGA_PURCHASE_BURGER","SAGA_FETCH_ORDERS","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","SAGA_AUTH_LOGOUT","SAGA_CHECK_AUTH_TIMEOUT","SAGA_AUTH","SAGA_AUTH_CHECK_STATE","SAGA_INIT_INGREDIENTS","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","setIngredients","ingredients","fetchIngredientsFailed","initIngredients","purchaseInit","purchaseBurgerStart","purchaseBurgerSuccess","id","orderData","orederId","purchaseBurgerFail","error","purchaseBurger","token","fetchOrdersSuccess","orders","fetchOrdersFail","fetchOrdersStart","fetchOrders","userId","authStart","authSuccess","idToken","authFail","logout","logoutSucceed","checkAuthTimeout","expirationTime","auth","email","password","isSignup","setAuthRedirectPath","path","authCheckState","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","module","exports","instance","axios","create","baseURL","spinner","className","classes","Loader","button","props","disabled","Button","btnType","join","onClick","clicked","children","backdrop","show","Backdrop","Modal","styles","Open","Close","Fragment","cancelHandler","React","memo","prevProps","nextProps","withErrorHandler","WrappedComponent","httpClient","useState","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","Promise","reject","useEffect","eject","useHttpErrorHandler","clearError","message","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","ValidationError","valueType","elementType","elementConfig","onChange","change","options","map","opt","key","displayValue","Input","Label","label","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","igKey","Array","_","i","reduce","arr","el","concat","Burger","logo","LogoClasses","Logo","animate","Animate","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","open","closed","connect","state","setSideDrawer","preSideDrawer","Content","buildControl","BuildControl","removed","Less","added","More","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","OrderButton","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseCuntinued","dispatch","useDispatch","onInitIngredients","useCallback","actions","ings","useSelector","burgerBuilder","totalPrice","purchasing","setPurchasing","history","purchasingCancelHandler","disabledInfo","textAlign","fontSize","Spinner","ingName","InKey","sum","OrderSummary","loading","building","authRedirectPath","onAuth","onSetAuthRedirectPath","setIsSignup","placeholder","validation","valid","setControls","formElementArray","config","form","formElement","event","controlName","updatedControls","target","inputChangedHandler","errorMessage","authRedirect","Auth","onSubmit","preventDefault","preState","onLogout","Checkout","lazy","Orders","dispath","onTryAutoSignup","routes","component","BurgerBuilder","render","Logout","fallback","Boolean","window","location","hostname","match","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngridient","updatedState","reducer","purchased","newOrder","orderId","fetchOrdersFailed","inittialState","authLogout","logoutSaga","checkAuthTimeoutSaga","authSaga","authCheckStateSaga","localStorage","removeItem","put","delay","authData","returnSecureToken","url","API_KEY","post","Date","getTime","data","expiresIn","expirationDate","setItem","localId","getItem","initIngredientsSaga","get","purchaseBurgerSaga","fetchOrdersSaga","queryParams","fetchedOrders","watchAuth","watchBurgerBuilder","watchOrders","takeEvery","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0ba43825.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\n\r\nexport const SAGA_PURCHASE_BURGER = 'SAGA_PURCHASE_BURGER';\r\nexport const SAGA_FETCH_ORDERS = 'SAGA_FETCH_ORDERS';\r\n\r\nexport const FETCH_ORDERS_START = ' FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\n\r\n\r\nexport const SAGA_AUTH_LOGOUT = 'SAGA_AUTH_LOGOUT'\r\nexport const SAGA_CHECK_AUTH_TIMEOUT = 'SAGA_CHECK_AUTH_TIMEOUT';\r\nexport const SAGA_AUTH = 'SAGA_AUTH';\r\nexport const SAGA_AUTH_CHECK_STATE = 'SAGA_AUTH_CHECK_STATE';\r\n\r\n\r\nexport const SAGA_INIT_INGREDIENTS  = 'SAGA_INIT_INGREDIENTS';\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const addIngredient  = (name)=>{\r\n\r\n    return {\r\n        type:actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\nexport const removeIngredient  = (name)=>{\r\n\r\n    return {\r\n        type:actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\n\r\nexport const setIngredients  = (ingredients) =>{\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed  = () =>{\r\n    return{\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n\r\nexport const initIngredients = () =>{\r\n   return{\r\n       type:actionTypes.SAGA_INIT_INGREDIENTS\r\n   }\r\n}\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orederId: id,\r\n        orderData: orderData\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return {\r\n        type: actionTypes.SAGA_PURCHASE_BURGER,\r\n        orderData: orderData,\r\n        token: token\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n};\r\n\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return {\r\n        type: actionTypes.SAGA_FETCH_ORDERS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const authStart = () =>{\r\n    return{\r\n    type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\n\r\nexport const authSuccess = (token,userId) =>{\r\n    return{\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken:token,\r\n    userId:userId\r\n    };\r\n};\r\n\r\n\r\nexport const authFail = (error)=>{\r\n        return{\r\n            type: actionTypes.AUTH_FAIL,\r\n            error:error\r\n        };\r\n};\r\n\r\n\r\n\r\nexport const logout =()=>{\r\n    return{\r\n        type: actionTypes.SAGA_AUTH_LOGOUT\r\n    }\r\n}\r\n\r\n\r\nexport const logoutSucceed =()=>{\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n \r\n\r\n\r\n\r\nexport const checkAuthTimeout = (expirationTime)=>{\r\n    return{\r\n     type:actionTypes.SAGA_CHECK_AUTH_TIMEOUT,\r\n     expirationTime:expirationTime\r\n    }\r\n}\r\n\r\nexport const auth = (email,password,isSignup)=>{\r\n    return {\r\n        type: actionTypes.SAGA_AUTH,\r\n        email:email,\r\n        password:password,\r\n        isSignup:isSignup\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthRedirectPath = (path)=>{\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path:path\r\n    }\r\n}\r\n\r\n\r\nexport const authCheckState=()=>{\r\n    return{\r\n        type:actionTypes.SAGA_AUTH_CHECK_STATE\r\n    }\r\n};","export const updateObject = (oldObject,updatedProperties)=>{\r\n\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport const checkValidity=(value, rules)=> {\r\n\r\n    let isValid = true;\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n\r\n    return isValid;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1WIbg\",\"BreadTop\":\"BurgerIngredient_BreadTop__12Hks\",\"Seeds1\":\"BurgerIngredient_Seeds1__2LspK\",\"Seeds2\":\"BurgerIngredient_Seeds2__3VmGa\",\"Meat\":\"BurgerIngredient_Meat__mOlL_\",\"Cheese\":\"BurgerIngredient_Cheese__25sX1\",\"Salad\":\"BurgerIngredient_Salad__3vmef\",\"Bacon\":\"BurgerIngredient_Bacon__1CCQE\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\r\n    baseURL:'https://burgerbuilder-62432.firebaseio.com/'\r\n\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\n\r\nexport default spinner;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n\r\n\r\n);\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__euwGR\",\"Open\":\"SideDrawer_Open__15XQf\",\"Close\":\"SideDrawer_Close__gebEB\",\"Logo\":\"SideDrawer_Logo__Nxx4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1Oinc\",\"Label\":\"Input_Label__2pOnz\",\"InputElement\":\"Input_InputElement__1JT00\",\"Invalid\":\"Input_Invalid__3vonm\",\"ValidationError\":\"Input_ValidationError__1sfNd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3Vtkb\",\"Label\":\"BuildControl_Label__1KrbK\",\"Less\":\"BuildControl_Less__2M2Ym\",\"More\":\"BuildControl_More__1U5ku\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\n\r\nconst backdrop =(props)=>(\r\n    props.show? <div \r\n    onClick={props.clicked}\r\n    className={classes.Backdrop}></div> : null\r\n);\r\n\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nconst Modal =props=>{\r\n   \r\n    let styles = props.show? classes.Open:classes.Close\r\n\r\n        return(    \r\n        <React.Fragment>\r\n            <Backdrop show={props.show} clicked={props.cancelHandler} />\r\n            <div\r\n                className={`${classes.Modal} ${styles} `}>\r\n                {props.children}\r\n            </div>\r\n        </React.Fragment>);\r\n}\r\nexport default React.memo(Modal,(prevProps,nextProps)=>\r\n    nextProps.show === prevProps.show && nextProps.children === prevProps.children\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3q2Qd\",\"Logo\":\"Toolbar_Logo__3POaC\",\"DesktopOnly\":\"Toolbar_DesktopOnly__21ZQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1LjpQ\",\"Open\":\"Modal_Open__k_VlX\",\"Close\":\"Modal_Close__G_tPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3Se6N\",\"Animate\":\"Logo_Animate__6NaPD\",\"float\":\"Logo_float__1Mtip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2MjKN\",\"active\":\"NavigationItem_active__3fD8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3Yu5Y\",\"OrderButton\":\"BuildControls_OrderButton__2SA_a\",\"enable\":\"BuildControls_enable__JGgFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3L0jT\",\"Success\":\"Button_Success__VscnC\",\"Danger\":\"Button_Danger__2qEKK\"};","\r\nimport React from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport useHttpErrorHandler from '../../hooks/http-error-handler';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n\r\n        const[error,clearError] = useHttpErrorHandler(axios);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    show={error}\r\n                    cancelHandler={clearError}>\r\n                    {error ? error.message : null}\r\n                </Modal>\r\n                <WrappedComponent {...props} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import { useEffect, useState } from 'react';\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default httpClient  => {\r\n\r\n    const [error, setError] = useState(null);\r\n\r\n    const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n        setError(null);\r\n        return req;\r\n    }, error => error);\r\n    const resInterceptor = httpClient.interceptors.response.use(res => res, error => {\r\n        setError(error);\r\n        return Promise.reject(error);\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            \r\n            httpClient.interceptors.request.eject(reqInterceptor);\r\n            httpClient.interceptors.response.eject(resInterceptor);\r\n        }\r\n    }, [httpClient.interceptors.request, httpClient.interceptors.response, reqInterceptor, resInterceptor]);\r\n\r\n\r\n\r\n    const errorConfirmedHandler = () => {\r\n        setError(null);\r\n    }\r\n\r\n    return [error, errorConfirmedHandler]\r\n}","\r\nimport React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    let validationError = null;\r\n    if (props.invalid && props.touched) {\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.valueType}!</p>;\r\n    }\r\n\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig} value={props.value} onChange={props.change}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement =\r\n                <textarea className={inputClasses.join(' ')}\r\n                    {...props.elementConfig} value={props.value} onChange={props.change}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement =\r\n                <select className={inputClasses.join(' ')}\r\n                    {...props.elementConfig} value={props.value} onChange={props.change}>\r\n                    {props.elementConfig.options.map(opt => (\r\n                        <option key={opt.value} value={opt.value}>{opt.displayValue}</option>\r\n                    ))}\r\n                </select>;\r\n            break;\r\n        default:\r\n            inputElement =\r\n                <input className={inputClasses.join(' ')}\r\n                    {...props.elementConfig} value={props.value}  onChange={props.change} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>)\r\n};\r\n\r\n\r\nexport default input;","\r\nimport React from 'react';\r\nimport classes from './BurgerIngredient.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst BurgerIngredient = props => {\r\n\r\n\r\n        let ingredient = null;\r\n\r\n        switch (props.type) {\r\n\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n\r\n            default: ingredient = null;\r\n\r\n        }\r\n\r\n        return ingredient;\r\n};\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","\r\nimport React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nconst burger = (props) => {\r\n\r\nlet transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey =>{\r\n            return [...Array(props.ingredients[igKey])].map((_,i)=>{\r\n                        return <BurgerIngredient key={igKey+i} type={igKey}/>\r\n                    });\r\n     }).reduce((arr,el)=>{\r\n         return arr.concat(el)\r\n     },[]);\r\n    \r\n     if(transformedIngredients.length === 0){\r\n         transformedIngredients = <p> Please start adding ingredients!</p>\r\n     }\r\n\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n                {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3N_Tr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1tu4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3uff2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__P8_j3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__hANNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader___e_d1\",\"load1\":\"Spinner_load1__H2ZBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3zEA6\"};","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n\r\n\r\n    let LogoClasses = [classes.Logo];\r\n    \r\n  \r\n   \r\n\r\n    if(props.animate){\r\n        LogoClasses.push(classes.Animate)\r\n    }\r\n\r\n \r\n    return (<div className={LogoClasses.join(' ')} style={{ height: props.height }} >\r\n        <img src={burgerLogo} alt='logo' />\r\n    </div>\r\n    )\r\n};\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => (\r\n\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink exact={props.exact} to={props.link} activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\n\r\n\r\nconst navigationItems =(props)=>(\r\n      \r\n    <ul className={classes.NavigationItems}>\r\n            <NavigationItem exact link=\"/\">Burger Builder</NavigationItem>\r\n            {props.isAuthenticated ? <NavigationItem link=\"/orders\" >Orders</NavigationItem> :null}\r\n         \r\n            {!props.isAuthenticated\r\n             ?<NavigationItem link=\"/auth\" >Authenticate</NavigationItem>\r\n             : <NavigationItem link=\"/logout\" >Logout</NavigationItem>\r\n            }\r\n    </ul>\r\n\r\n\r\n);\r\n\r\n\r\n\r\n\r\nexport default navigationItems;","\r\nimport React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\n\r\n\r\nconst drawerToggle = (props) => (\r\n\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\n\r\nconst toolbar = (props) => (\r\n\r\n    <header className={classes.Toolbar}>\r\n\r\n\r\n        <DrawerToggle clicked={props.clicked} />\r\n        <div className={classes.Logo}><Logo /></div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n\r\n\r\n    </header>\r\n\r\n);\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if (props.open) {\r\n\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n\r\n                <div className={classes.Logo}><Logo /></div>\r\n\r\n                <nav><NavigationItems isAuthenticated={props.isAuth} /></nav>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;","import React ,{useState} from 'react';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nconst Layout = props=>{\r\n\r\n\r\n    const [sideDrawer,setSideDrawer] = useState(false);\r\n\r\n\r\n    const sideDrawerClosedHandler=()=>{\r\n\r\n        setSideDrawer(false);\r\n\r\n    }\r\n\r\n    const sideDrawerToggleHandler=()=>{\r\n\r\n     setSideDrawer((preSideDrawer)=>(!preSideDrawer))\r\n\r\n    }\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Toolbar \r\n                 isAuth={props.isAuthenticated}\r\n                 clicked={sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                     isAuth={props.isAuthenticated} \r\n                 open={sideDrawer} closed={sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {props.children}\r\n\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        isAuthenticated : state.auth.token !==null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            onClick={props.removed}\r\n            disabled={props.disabled}\r\n            className={classes.Less}>Less</button>\r\n        <button onClick={props.added} className={classes.More}>More</button>\r\n    </div>\r\n);\r\n\r\n\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n\r\n];\r\n\r\n\r\n\r\nconst buildControls = (props) => (\r\n\r\n    <div className={classes.BuildControls}>\r\n        <p> Current Price : <strong>{props.price.toFixed(2)}$</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n            />\r\n        ))}\r\n        <button disabled={!props.purchasable}\r\n            onClick={props.ordered}\r\n            className={classes.OrderButton}>{props.isAuth?'ORDER NOW':'SIGNUP TO ORDER'}</button>\r\n    </div>\r\n\r\n);\r\n\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\n\r\n\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    let ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return <li key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}> {igKey} {props.ingredients[igKey]} </span>\r\n            </li>\r\n        })\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Your Order </h3>\r\n            <p> a delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                    {ingredientSummary}\r\n            </ul>\r\n            <p> Continue to Checkout ?</p>\r\n            <p><strong>Total Price: {props.price.toFixed(2)} $</strong></p>\r\n            <Button clicked={props.purchaseCancelled} btnType={'Danger'}>Cancel</Button> \r\n            <Button clicked={props.purchaseCuntinued} btnType={'Success'}> CONTINUE </Button>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default orderSummary;","import React, { useEffect, useState ,useCallback} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHander/withErrorHandler'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\n\r\nexport const BurgerBuilder = props => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onIngredientAdded = (ingName) => dispatch(actions.addIngredient(ingName));\r\n    const onIngredientRemoved = (ingName) => dispatch(actions.removeIngredient(ingName));\r\n    const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()),[dispatch]);\r\n    const onInitPurchase = () => dispatch(actions.purchaseInit());\r\n    const onSetAuthRedirectPath = (path) => dispatch(actions.setAuthRedirectPath(path));\r\n\r\n    const ings = useSelector(state=>state.burgerBuilder.ingredients);\r\n    const price = useSelector(state=>state.burgerBuilder.totalPrice); \r\n    const error = useSelector(state=>state.burgerBuilder.error);\r\n    const isAuthenticated = useSelector(state=>state.auth.token!==null);\r\n\r\n    const [purchasing, setPurchasing] = useState(false);\r\n\r\n    const {history} = props;\r\n\r\n\r\n    useEffect(() => {\r\n        onInitIngredients();\r\n    }, [onInitIngredients])\r\n\r\n\r\n\r\n    const updatePurchaseState = (ingredients) => {\r\n\r\n        const sum = Object.keys(ingredients).map(InKey => {\r\n            return ingredients[InKey]\r\n        }).reduce((sum, el) => {\r\n            return sum = sum + el;\r\n        }, 0);\r\n\r\n        return sum > 0;\r\n\r\n    }\r\n\r\n    const purchaseHandler = () => {\r\n\r\n        if (isAuthenticated) {\r\n            setPurchasing(true);\r\n        } else {\r\n            onSetAuthRedirectPath('/checkout')\r\n            history.push(\"/auth\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const purchasingCancelHandler = () => {\r\n\r\n        setPurchasing(false);\r\n\r\n    }\r\n\r\n    const purchaseContinueHander = () => {\r\n        onInitPurchase();\r\n        history.push('/checkout')\r\n    }\r\n\r\n\r\n\r\n    const disabledInfo = {\r\n        ...ings\r\n    };\r\n\r\n\r\n    for (let key in disabledInfo) {\r\n        disabledInfo[key] = disabledInfo[key] <= 0; // true or false\r\n    }\r\n\r\n\r\n    let orderSummary = null;\r\n\r\n    let burger = error ? <p style={{ textAlign: 'center', fontSize: '2rem' }}>Ingredients cant be loaded</p> : <Spinner />\r\n\r\n    if (ings) {\r\n        burger = <React.Fragment>\r\n            <Burger ingredients={ings} />\r\n            <BuildControls\r\n                ingredientAdded={onIngredientAdded}\r\n                ingredientRemoved={onIngredientRemoved}\r\n                disabled={disabledInfo}\r\n                price={price}\r\n                purchasable={updatePurchaseState(ings)}\r\n                ordered={purchaseHandler}\r\n                isAuth={isAuthenticated}\r\n            /></React.Fragment>\r\n\r\n        orderSummary = <OrderSummary\r\n            price={price}\r\n            purchaseCancelled={purchasingCancelHandler}\r\n            purchaseCuntinued={purchaseContinueHander}\r\n            ingredients={ings} />\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <Modal\r\n                show={purchasing}\r\n                cancelHandler={purchasingCancelHandler}>\r\n                {orderSummary}\r\n            </Modal>\r\n\r\n            {burger}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);","import React, { useState, useEffect } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\nimport Logo from '../../components/Logo/Logo'\r\n\r\nconst Auth = props => {\r\n\r\n    const [isSignup, setIsSignup] = useState(true);\r\n    const [controls, setControls] = useState({\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Your Email'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    });\r\n\r\n    const { onSetAuthRedirectPath, building, authRedirectPath } = props;\r\n\r\n    useEffect(() => {\r\n        if (!building && authRedirectPath !== '/') {\r\n            onSetAuthRedirectPath();\r\n        }\r\n    }, [onSetAuthRedirectPath, building, authRedirectPath]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const inputChangedHandler = (event, controlName) => {\r\n\r\n        const updatedControls = updateObject(controls, {\r\n            [controlName]: updateObject(controls[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, controls[controlName].validation),\r\n                touched: true\r\n            })\r\n        })\r\n\r\n\r\n        setControls(updatedControls);\r\n\r\n    }\r\n\r\n    const swtichAuthModeHandler = () => {\r\n        setIsSignup((preState) => {\r\n            return !preState\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const formElementArray = [];\r\n\r\n    for (let key in controls) {\r\n\r\n        formElementArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        })\r\n\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onAuth(controls.email.value,\r\n            controls.password.value,\r\n            isSignup)\r\n\r\n    }\r\n\r\n\r\n\r\n    let form = formElementArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            touched={formElement.config.touched}\r\n            shouldValidate={formElement.config.validation}\r\n            valueType={formElement.id}\r\n            change={(event) => inputChangedHandler(event, formElement.id)} />))\r\n\r\n\r\n    if (props.loading) {\r\n        form = <Spinner />\r\n    }\r\n\r\n\r\n    let errorMessage = null;\r\n\r\n    if (props.error) {\r\n        errorMessage = (\r\n            <p>{props.error.message}</p>\r\n        )\r\n    }\r\n\r\n    let authRedirect = null\r\n\r\n    if (props.isAuthenticated) {\r\n        authRedirect = <Redirect to={props.authRedirectPath} />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.Auth}>\r\n            <Logo height=\"100px\" animate />\r\n            {authRedirect}\r\n            {errorMessage}\r\n            <form onSubmit={submitHandler}>\r\n                {form}\r\n                <Button btnType=\"Success\"> SUBMIT </Button>\r\n\r\n            </form>\r\n            <Button clicked={swtichAuthModeHandler}\r\n                btnType=\"Danger\"> SWITCH TO {isSignup ? 'SIGNIN' : 'SIGNUP'} </Button>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        building: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React,{useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst Logout =props=>{\r\n\r\n    const {onLogout} = props;\r\n\r\n\r\n    useEffect(()=>{\r\n      onLogout();\r\n    },[onLogout])\r\n\r\n        return <Redirect to=\"/\" />;\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n       onLogout :()=>dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React, { useEffect, Suspense } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\nimport Spinner from './components/UI/Spinner/Spinner';\n\n\n\nconst Checkout = React.lazy(() => import('./containers/Checkout/Checkout'));\nconst Orders = React.lazy(() => import('./containers/Orders/Orders'));\n\nconst App = props => {\n\n  const { onTryAutoSignup, isAuthenticated } = props;\n\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/\" component={BurgerBuilder} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/checkout\" render={() => <Checkout />} />\n        <Route path=\"/orders\" render={() => <Orders />} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  }\n\n\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={<Spinner />}> {routes} </Suspense>\n      </Layout>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispath => {\n  return {\n    onTryAutoSignup: () => dispath(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building:false\r\n}\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.6\r\n\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngridient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngridient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building:true\r\n    }\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIngridient = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngridient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building:true\r\n    }\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\n\r\nconst setIngredients = (state, action) => {\r\n\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat,\r\n        },\r\n        totalPrice: initialState.totalPrice,\r\n        error: false,\r\n        building:false\r\n    })\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n\r\n}\r\n\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false })\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true })\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    })\r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false })\r\n}\r\n\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true })\r\n}\r\n\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n\r\n    return updateObject(state, {\r\n        loading: false,\r\n        orders: action.orders\r\n    })\r\n}\r\n\r\nconst fetchOrdersFailed = (state, action) => {\r\n    return updateObject(state, { loading: false })\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action)\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_FAILED: return fetchOrdersFailed(state, action)\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst inittialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath:'/'\r\n}\r\n\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true })\r\n}\r\n\r\n\r\n\r\nconst authLogout =(state,action)=>{\r\n    return updateObject(state,{token:null,userId:null});\r\n}\r\n\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n\r\n    });\r\n};\r\n\r\nconst authFail = (state,action)=>{\r\n    return updateObject(state,{\r\n        error:action.error,\r\n        loading:false\r\n    })\r\n}\r\n\r\nconst setAuthRedirectPath = (state,action)=>{\r\n    return updateObject(state,{\r\n       authRedirectPath:action.path\r\n    })\r\n}\r\n\r\n\r\nconst reducer = (state = inittialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\r\n        default: return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer;","import { put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/index'\r\nimport { delay } from 'redux-saga/effects'\r\nimport axios from 'axios';\r\n\r\nexport function* logoutSaga(action) {\r\n    yield localStorage.removeItem('token');\r\n    yield localStorage.removeItem('expirationDate')\r\n    yield localStorage.removeItem('userId')\r\n    yield put(actions.logoutSucceed())\r\n}\r\n\r\n\r\nexport function* checkAuthTimeoutSaga(action) {\r\n    yield delay(action.expirationTime * 1000);\r\n    yield put(action.logout());\r\n}\r\n\r\nexport function* authSaga(action) {\r\n\r\n    const { email, password, isSignup } = action;\r\n\r\n\r\n    yield put(actions.authStart());\r\n\r\n    const authData = {\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true\r\n    };\r\n\r\n    const API_KEY = 'AIzaSyBb5RyVME27vefF4ex7pSTg-Zidt41Tp0I';\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`\r\n\r\n    if (!isSignup) {\r\n        url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`\r\n    }\r\n\r\n\r\n    try {\r\n        const response = yield axios.post(url, authData)\r\n        const expirationDate = yield new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n        yield localStorage.setItem('token', response.data.idToken)\r\n        yield localStorage.setItem('expirationDate', expirationDate)\r\n        yield localStorage.setItem('userId', response.data.localId)\r\n        yield put(actions.authSuccess(response.data.idToken, response.data.localId))\r\n        yield put(actions.checkAuthTimeout(response.data.expiresIn))\r\n    } catch (error) {\r\n        yield put(actions.authFail(error.response.data.error))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function* authCheckStateSaga(action) {\r\n\r\n\r\n    const token = yield localStorage.getItem('token')\r\n\r\n    if (!token) {\r\n        yield put(actions.logout())\r\n    } else {\r\n        const expirationDate = yield new Date(localStorage.getItem('expirationDate'));\r\n\r\n        if (expirationDate > new Date()) {\r\n            const userId = yield localStorage.getItem('userId')\r\n            yield put(actions.authSuccess(token, userId))\r\n            yield put(actions.checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n        } else {\r\n            yield put(actions.logout())\r\n        }\r\n\r\n    }\r\n};\r\n\r\n","\r\nimport {put} from 'redux-saga/effects';\r\nimport axios from '../../axios-orders';\r\nimport * as actions from '../actions/index';\r\n\r\n\r\nexport function* initIngredientsSaga(action){\r\n    try{\r\n        const response = yield axios.get('https://burgerbuilder-62432.firebaseio.com/ingredients.json')\r\n        yield put(actions.setIngredients(response.data))\r\n    }catch(error){\r\n        yield put(actions.fetchIngredientsFailed());\r\n    }\r\n\r\n \r\n}","\r\nimport { put } from 'redux-saga/effects';\r\nimport axios from '../../axios-orders';\r\nimport * as actions from '../actions/index';\r\n\r\nexport function* purchaseBurgerSaga(action) {\r\n\r\n    const { orderData, token } = action;\r\n    try {\r\n        yield put(actions.purchaseBurgerStart());\r\n        const response = yield axios.post('/orders.json?auth=' + token, orderData)\r\n        yield put(actions.purchaseBurgerSuccess(response.data.name, orderData));\r\n    } catch (error) {\r\n        yield put(actions.purchaseBurgerFail(error))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function* fetchOrdersSaga(action) {\r\n\r\n    const { userId, token } = action;\r\n    yield put(actions.fetchOrdersStart());\r\n    const queryParams = `?auth=${token}'&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n\r\n    try {\r\n        const res = yield axios.get('/orders.json' + queryParams)\r\n        const fetchedOrders = [];\r\n        for (let key in res.data) {\r\n            fetchedOrders.push({\r\n                ...res.data[key],\r\n                id: key\r\n            });\r\n        }\r\n\r\n        yield put(actions.fetchOrdersSuccess(fetchedOrders))\r\n    } catch (error) {\r\n        yield put(actions.fetchOrdersFail(error))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { logoutSaga, checkAuthTimeoutSaga, authSaga, authCheckStateSaga } from './auth';\r\nimport { initIngredientsSaga } from './burgerBuilder'\r\nimport {purchaseBurgerSaga,fetchOrdersSaga} from './orders'\r\nimport * as actionTypes from '../actions/actionTypes'\r\nimport { takeEvery } from 'redux-saga/effects'\r\n\r\n\r\n\r\nexport function* watchAuth() {\r\n    yield takeEvery(actionTypes.SAGA_AUTH_LOGOUT, logoutSaga);\r\n    yield takeEvery(actionTypes.SAGA_CHECK_AUTH_TIMEOUT, checkAuthTimeoutSaga);\r\n    yield takeEvery(actionTypes.SAGA_AUTH, authSaga);\r\n    yield takeEvery(actionTypes.SAGA_AUTH_CHECK_STATE, authCheckStateSaga);\r\n}\r\n\r\n\r\nexport function* watchBurgerBuilder() {\r\n    yield takeEvery(actionTypes.SAGA_INIT_INGREDIENTS, initIngredientsSaga);\r\n}\r\n\r\n\r\nexport function* watchOrders() {\r\n    yield takeEvery(actionTypes.SAGA_PURCHASE_BURGER, purchaseBurgerSaga);\r\n    yield takeEvery(actionTypes.SAGA_FETCH_ORDERS, fetchOrdersSaga);\r\n}\r\n\r\n\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\nimport createSagaMiddleware from 'redux-saga';\nimport { watchAuth, watchBurgerBuilder, watchOrders } from './store/sagas/'\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk, sagaMiddleware)));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchBurgerBuilder);\nsagaMiddleware.run(watchOrders);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}